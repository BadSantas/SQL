SQL
-- Вставка данных в таблицу исполнителей
INSERT INTO artist (name) VALUES ('Artist1');
INSERT INTO artist (name) VALUES ('Artist2');
INSERT INTO artist (name) VALUES ('Artist3');
INSERT INTO artist (name) VALUES ('Artist4');

-- Вставка данных в таблицу жанров
INSERT INTO genre (name) VALUES ('Rock');
INSERT INTO genre (name) VALUES ('Pop');
INSERT INTO genre (name) VALUES ('Jazz');

-- Вставка данных в таблицу альбомов
INSERT INTO album (title, release_year) VALUES ('Album1', 2019);
INSERT INTO album (title, release_year) VALUES ('Album2', 2020);
INSERT INTO album (title, release_year) VALUES ('Album3', 2021);

-- Вставка данных в таблицу треков
INSERT INTO track (title, duration, album_id) VALUES ('Track1', 210, 1);
INSERT INTO track (title, duration, album_id) VALUES ('Track2', 180, 1);
INSERT INTO track (title, duration, album_id) VALUES ('Track3', 240, 2);
INSERT INTO track (title, duration, album_id) VALUES ('Track4', 200, 2);
INSERT INTO track (title, duration, album_id) VALUES ('Track5', 220, 3);
INSERT INTO track (title, duration, album_id) VALUES ('Track6', 230, 3);

-- Вставка данных в таблицу сборников
INSERT INTO compilation (title, release_year) VALUES ('Compilation1', 2018);
INSERT INTO compilation (title, release_year) VALUES ('Compilation2', 2019);
INSERT INTO compilation (title, release_year) VALUES ('Compilation3', 2020);
INSERT INTO compilation (title, release_year) VALUES ('Compilation4', 2021);

-- Вставка данных в промежуточную таблицу artist_genre
INSERT INTO artist_genre (artist_id, genre_id) VALUES (1, 1);
INSERT INTO artist_genre (artist_id, genre_id) VALUES (1, 2);
INSERT INTO artist_genre (artist_id, genre_id) VALUES (2, 2);
INSERT INTO artist_genre (artist_id, genre_id) VALUES (3, 3);
INSERT INTO artist_genre (artist_id, genre_id) VALUES (4, 1);

-- Вставка данных в промежуточную таблицу artist_album
INSERT INTO artist_album (artist_id, album_id) VALUES (1, 1);
INSERT INTO artist_album (artist_id, album_id) VALUES (2, 2);
INSERT INTO artist_album (artist_id, album_id) VALUES (3, 3);
INSERT INTO artist_album (artist_id, album_id) VALUES (4, 1);
INSERT INTO artist_album (artist_id, album_id) VALUES (1, 2);

-- Вставка данных в промежуточную таблицу compilation_track
INSERT INTO compilation_track (compilation_id, track_id) VALUES (1, 1);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (1, 2);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (2, 3);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (2, 4);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (3, 5);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (3, 6);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (4, 1);
INSERT INTO compilation_track (compilation_id, track_id) VALUES (4, 3);

SELECT-запросы

-- Названия альбомов, в которых присутствуют исполнители более чем одного жанра

SELECT DISTINCT a.title
FROM album a
JOIN artist_album aa ON a.album_id = aa.album_id
JOIN artist ar ON aa.artist_id = ar.artist_id
JOIN artist_genre ag ON ar.artist_id = ag.artist_id
GROUP BY a.title, aa.album_id
HAVING COUNT(DISTINCT ag.genre_id) > 1;

-- Наименования треков, которые не входят в сборники

SELECT t.title
FROM track t
LEFT JOIN compilation_track ct ON t.track_id = ct.track_id
WHERE ct.track_id IS NULL;

-- Исполнитель или исполнители, написавшие самый короткий по продолжительности трек

WITH shortest_tracks AS (
    SELECT t.track_id, t.duration
    FROM track t
    WHERE t.duration = (SELECT MIN(duration) FROM track)
)
SELECT ar.name
FROM artist ar
JOIN artist_album aa ON ar.artist_id = aa.artist_id
JOIN album a ON aa.album_id = a.album_id
JOIN track t ON a.album_id = t.album_id
JOIN shortest_tracks st ON t.track_id = st.track_id;

-- Названия альбомов, содержащих наименьшее количество треков

WITH track_counts AS (
    SELECT a.album_id, a.title, COUNT(t.track_id) AS track_count
    FROM album a
    JOIN track t ON a.album_id = t.album_id
    GROUP BY a.album_id, a.title
)
SELECT title
FROM track_counts
WHERE track_count = (SELECT MIN(track_count) FROM track_counts);
